# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET           /                                      controllers.HomeController.index()

GET           /customersView                         controllers.CustomersController.getAllCustomersView()
GET           /customersView/add                     controllers.CustomersController.addCustomerView()
GET           /customersView/doAdd                   controllers.CustomersController.addCustomerViewResponse()
GET           /customersView/modify/:id              controllers.CustomersController.modifyCustomerView(id: Long)
GET           /customersView/doModify/:id            controllers.CustomersController.modifyCustomerViewResponse(id: Long)
GET           /customersView/remove/:id              controllers.CustomersController.removeCustomerView(id: Long)
GET           /customersView/:id                     controllers.CustomersController.getCustomerView(id: Long)
GET           /customersView/:id/cart                controllers.CustomersController.getCustomerCartView(id: Long)
GET           /customersView/:id/bonus-cards         controllers.CustomersController.getCustomerBonusCardsView(id: Long)
GET           /customersView/:id/orders              controllers.CustomersController.getCustomerOrdersView(id: Long)
GET           /customersView/:id/transactions        controllers.CustomersController.getCustomerTransactionsView(id: Long)

GET           /customers                             controllers.CustomersController.getAllCustomers()
GET           /customers/:id                         controllers.CustomersController.getCustomer(id: Long)
GET           /customers/:id/cart                    controllers.CustomersController.getCustomerCart(id: Long)
GET           /customers/:id/bonus-cards             controllers.CustomersController.getCustomerBonusCards(id: Long)
GET           /customers/:id/orders                  controllers.CustomersController.getCustomerOrders(id: Long)
GET           /customers/:id/transactions            controllers.CustomersController.getCustomerTransactions(id: Long)
POST          /customers/add                         controllers.CustomersController.addCustomer()
POST          /customers/modify/:id                  controllers.CustomersController.modifyCustomer(id: Long)
DELETE        /customers/remove/:id                  controllers.CustomersController.removeCustomer(id: Long)

GET           /usersView                             controllers.UsersController.getAllUsersView()
GET           /usersView/add                         controllers.UsersController.addUserView()
GET           /usersView/doAdd                       controllers.UsersController.addUserViewResponse()
GET           /usersView/doModify/:id                controllers.UsersController.modifyUserViewResponse(id: Long)
GET           /usersView/:id                         controllers.UsersController.getUserView(id: Long)
GET           /usersView/modify/:id                  controllers.UsersController.modifyUserView(id: Long)
GET           /usersView/remove/:id                  controllers.UsersController.removeUserView(id: Long)

GET           /users                                 controllers.UsersController.getAllUsers()
GET           /users/:id                             controllers.UsersController.getUser(id: Long)
POST          /users/add                             controllers.UsersController.addUser()
POST          /users/modify/:id                      controllers.UsersController.modifyUser(id: Long)
DELETE        /users/remove/:id                      controllers.UsersController.removeUser(id: Long)

GET           /productsView                          controllers.ProductsController.getAllProductsView
GET           /productsView/add                      controllers.ProductsController.addProductView()
GET           /productsView/doAdd                    controllers.ProductsController.addProductViewResponse()
GET           /productsView/doModify/:id             controllers.ProductsController.modifyProductViewResponse(id: Long)
GET           /productsView/:id                      controllers.ProductsController.getProductView(id: Long)
GET           /productsView/modify/:id               controllers.ProductsController.modifyProductView(id: Long)
GET           /productsView/remove/:id               controllers.ProductsController.removeProductView(id: Long)

GET           /products                              controllers.ProductsController.getAllProducts
GET           /products/:id                          controllers.ProductsController.getProduct(id: Long)
POST          /products/add                          controllers.ProductsController.addProduct()
POST          /products/modify/:id                   controllers.ProductsController.modifyProduct(id: Long)
DELETE        /products/remove/:id                   controllers.ProductsController.removeProduct(id: Long)

GET           /ordersView                            controllers.OrdersController.getAllOrdersView()
GET           /ordersView/add                        controllers.OrdersController.addOrderView()
GET           /ordersView/doAdd                      controllers.OrdersController.addOrderViewResponse()
GET           /ordersView/doModify/:id               controllers.OrdersController.modifyOrderViewResponse(id: Long)
GET           /ordersView/:id                        controllers.OrdersController.getOrderView(id: Long)
GET           /ordersView/modify/:id                 controllers.OrdersController.modifyOrderView(id: Long)
GET           /ordersView/remove/:id                 controllers.OrdersController.removeOrderView(id: Long)

GET           /orders                                controllers.OrdersController.getAllOrders()
GET           /orders/:id                            controllers.OrdersController.getOrder(id: Long)
POST          /orders/add                            controllers.OrdersController.addOrder()
POST          /orders/modify/:id                     controllers.OrdersController.modifyOrder(id: Long)
DELETE        /orders/remove/:id                     controllers.OrdersController.removeOrder(id: Long)

GET           /cart/entriesView                      controllers.CartEntriesController.getAllCartEntriesView()
GET           /cart/entriesView/add                  controllers.CartEntriesController.addCartEntryView()
GET           /cart/entriesView/modify/:id           controllers.CartEntriesController.modifyCartEntryView(id: Long)
GET           /cart/entriesView/remove/:id           controllers.CartEntriesController.removeCartEntryView(id: Long)
GET           /cart/entriesView/doAdd                controllers.CartEntriesController.addCartEntryViewResponse()
GET           /cart/entriesView/doModify/:id         controllers.CartEntriesController.modifyCartEntryViewResponse(id: Long)
GET           /cart/entriesView/:id                  controllers.CartEntriesController.getCartEntryView(id: Long)

GET           /cart/entries                          controllers.CartEntriesController.getAllCartEntries()
GET           /cart/entries/:id                      controllers.CartEntriesController.getCartEntry(id: Long)
POST          /cart/entries/add                      controllers.CartEntriesController.addCartEntry()
POST          /cart/entries/modify/:id               controllers.CartEntriesController.modifyCartEntry(id: Long)
DELETE        /cart/entries/remove/:id               controllers.CartEntriesController.removeCartEntry(id: Long)

GET           /bonus-cardsView                       controllers.BonusCardsController.getAllBonusCardsView()
GET           /bonus-cardsView/add                   controllers.BonusCardsController.addBonusCardView()
GET           /bonus-cardsView/modify/:id            controllers.BonusCardsController.modifyBonusCardView(id: Long)
GET           /bonus-cardsView/remove/:id            controllers.BonusCardsController.removeBonusCardView(id: Long)
GET           /bonus-cardsView/doAdd                 controllers.BonusCardsController.addBonusCardViewResponse()
GET           /bonus-cardsView/doModify/:id          controllers.BonusCardsController.modifyBonusCardViewResponse(id: Long)
GET           /bonus-cardsView/:id                   controllers.BonusCardsController.getBonusCardView(id: Long)

GET           /bonus-cards                           controllers.BonusCardsController.getAllBonusCard()
GET           /bonus-cards/:id                       controllers.BonusCardsController.getBonusCard(id: Long)
POST          /bonus-cards/add                       controllers.BonusCardsController.addBonusCard()
POST          /bonus-cards/modify/:id                controllers.BonusCardsController.modifyBonusCard(id: Long)
DELETE        /bonus-cards/remove/:id                controllers.BonusCardsController.removeBonusCard(id: Long)

GET           /vouchersView                          controllers.VouchersController.getAllVouchersView()
GET           /vouchersView/add                      controllers.VouchersController.addVoucherView()
GET           /vouchersView/modify/:id               controllers.VouchersController.modifyVoucherView(id: Long)
GET           /vouchersView/remove/:id               controllers.VouchersController.removeVoucherView(id: Long)
GET           /vouchersView/doAdd                    controllers.VouchersController.addVoucherViewResponse()
GET           /vouchersView/doModify/:id             controllers.VouchersController.modifyVoucherViewResponse(id: Long)
GET           /vouchersView/:id                      controllers.VouchersController.getVoucherView(id: Long)

GET           /vouchers                              controllers.VouchersController.getAllVouchers()
GET           /vouchers/:id                          controllers.VouchersController.getVoucher(id: Long)
POST          /vouchers/add                          controllers.VouchersController.addVoucher()
POST          /vouchers/modify/:id                   controllers.VouchersController.modifyVoucher(id: Long)
DELETE        /vouchers/remove/:id                   controllers.VouchersController.removeVoucher(id: Long)

GET           /promotionsView                        controllers.PromotionsController.getAllPromotionsView()
GET           /promotionsView/add                    controllers.PromotionsController.addPromotionView()
GET           /promotionsView/doAdd                  controllers.PromotionsController.addPromotionViewResponse()
GET           /promotionsView/doModify/:id           controllers.PromotionsController.modifyPromotionViewResponse(id: Long)
GET           /promotionsView/:id                    controllers.PromotionsController.getPromotionView(id: Long)
GET           /promotionsView/modify/:id             controllers.PromotionsController.modifyPromotionView(id: Long)
GET           /promotionsView/remove/:id             controllers.PromotionsController.removePromotionView(id: Long)

GET           /promotions                            controllers.PromotionsController.getAllPromotions()
GET           /promotions/:id                        controllers.PromotionsController.getPromotion(id: Long)
POST          /promotions/add                        controllers.PromotionsController.addPromotion()
POST          /promotions/modify/:id                 controllers.PromotionsController.modifyPromotion(id: Long)
DELETE        /promotions/remove/:id                 controllers.PromotionsController.removePromotion(id: Long)

GET           /categoriesView                        controllers.CategoriesController.getAllCategoriesView()
GET           /categoriesView/add                    controllers.CategoriesController.addCategoryView()
GET           /categoriesView/doAdd                  controllers.CategoriesController.addCategoryViewResponse()
GET           /categoriesView/doModify/:id           controllers.CategoriesController.modifyCategoryViewResponse(id: Long)
GET           /categoriesView/:id                    controllers.CategoriesController.getCategoryView(id: Long)
GET           /categoriesView/modify/:id             controllers.CategoriesController.modifyCategoryView(id: Long)
GET           /categoriesView/remove/:id             controllers.CategoriesController.removeCategoryView(id: Long)

GET           /categories                            controllers.CategoriesController.getAllCategories()
GET           /categories/:id                        controllers.CategoriesController.getCategory(id: Long)
POST          /categories/add                        controllers.CategoriesController.addCategory()
POST          /categories/modify/:id                 controllers.CategoriesController.modifyCategory(id: Long)
DELETE        /categories/remove/:id                 controllers.CategoriesController.removeCategory(id: Long)

GET           /transactionsView                      controllers.TransactionsController.getAllTransactionsView()
GET           /transactionsView/add                  controllers.TransactionsController.addTransactionView()
GET           /transactionsView/doAdd                controllers.TransactionsController.addTransactionViewResponse()
GET           /transactionsView/doModify/:id         controllers.TransactionsController.modifyTransactionViewResponse(id: Long)
GET           /transactionsView/:id                  controllers.TransactionsController.getTransactionView(id: Long)
GET           /transactionsView/modify/:id           controllers.TransactionsController.modifyTransactionView(id: Long)
GET           /transactionsView/remove/:id           controllers.TransactionsController.removeTransactionView(id: Long)

GET           /transactions                          controllers.TransactionsController.getAllTransactions()
GET           /transactions/:id                      controllers.TransactionsController.getTransaction(id: Long)
POST          /transactions/add                      controllers.TransactionsController.addTransaction()
POST          /transactions/modify/:id               controllers.TransactionsController.modifyTransaction(id: Long)
DELETE        /transactions/remove/:id               controllers.TransactionsController.removeTransaction(id: Long)

GET           /authentication/:provider              controllers.AuthenticationController.authenticate(provider: String)
POST          /authentication/log-out                controllers.AuthenticationController.logOut()

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                          controllers.Assets.versioned(path="/public", file: Asset)
